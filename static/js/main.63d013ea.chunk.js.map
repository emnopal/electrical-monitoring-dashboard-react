{"version":3,"sources":["Helper/Config/firebaseConfig.js","Helper/Utils/formatTime.js","Helper/Utils/flattenObj.js","Helper/Utils/fetchFirebaseDatabase.js","Components/Chart/Stock.jsx","Helper/Utils/statFuncFromObj.js","Components/Chart/Stats.jsx","Components/Chart/Table.jsx","Helper/Utils/statFuncFromArr.js","Components/Chart/Gauge.jsx","Page/WelcomePage.jsx","Components/Other/Clock.jsx","App.js","index.js","registerServiceWorker.js"],"names":["app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","dbRef","ref","formatTime","time","Intl","DateTimeFormat","dateStyle","timeStyle","timeZone","format","Date","flattenObj","obj","as","newObj","Object","keys","forEach","key","keyKey","_keyValueTemp","_keyTemp","parseFloat","toLowerCase","JSON","stringify","values","FetchFirebaseDatabase","constructor","this","getKeys","Array","isArray","getValue","order","sortedObj","sortObj","map","a","getValueObj","orderBy","orderSort","getValueAll","getValueArr","returnAs","isStr","String","data","result","d","k","flat","xMult","yMult","sort","b","getHighestObjByKey","getLowestObjByKey","getHighestValueByKey","getLowestValueByKey","Stock","Component","componentDidMount","createStockChart","componentDidUpdate","bgColor","textColor","props","theme","formatData","parseInt","getTime","title","reverse","Highcharts","chart","backgroundColor","rangeSelector","selected","text","style","color","series","name","marker","enabled","radius","tooltip","valueDecimals","render","id","StatFuncFromObj","dataCopy","str","toLocaleString","length","reduce","arr","val","q","arrData","getArrFromObj","pos","base","Math","floor","rest","undefined","findQuantile","mu","findMean","diffArr","sqrt","Stats","super","state","units","highest","lowest","timeHighest","convertLocale","timeLowest","mean","median","findMedian","std","findStd","latestData","latestTime","firstData","firstTime","prevProps","prevState","snapshot","setState","renderOther","renderCurrency","conditionalUnits","TabelChart","tableColorStyle","Table","className","item","index","StatFuncFromArr","findSum","HighchartsMore","HighchartsGauge","Gauge","createGaugeChart","arrFromObj","type","pane","startAngle","endAngle","background","center","size","yAxis","min","max","tickPixelInterval","tickPosition","tickColor","tickLength","tickWidth","minorTickInterval","labels","distance","fontSize","plotBands","from","to","thickness","valueSuffix","dataLabels","borderWidth","dial","baseWidth","baseLength","rearLength","pivot","WelcomePage","Container","Clock","intervalID","setInterval","tick","componentWillUnmount","clearInterval","App","_","localStorage","getItem","zeroSelected","bind","currentSelected","keySelected","energySelected","frequencySelected","powerFactorSelected","powerSelected","priceSelected","voltageSelected","get","child","exists","snapshotFlatten","DarkMode","setDark","setItem","document","documentElement","setAttribute","storedTheme","prefersDark","window","matchMedia","matches","defaultDark","role","aria-label","htmlFor","onChange","e","target","checked","defaultChecked","Header","position","top","left","href","rel","zeroHandlerSelected","otherHandlerSelected","buttonHandler","Nav","Button","onClick","conditionalContainer","button","ReactDOM","getElementById","navigator","addEventListener","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"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","file":"static/js/main.63d013ea.chunk.js","sourcesContent":["// env in react: https://stackoverflow.com/questions/42182577/is-it-possible-to-use-dotenv-in-a-react-project\n// just add REACT_APP_<key_name>\n\nimport {initializeApp} from \"firebase/app\";\nimport {getDatabase, ref} from \"firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    databaseURL: process.env.REACT_APP_databaseURL,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId,\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\nconst dbRef = ref(db);\n\nexport default dbRef;\n","const formatTime = (time) => {\n    const dtFormat = new Intl.DateTimeFormat('id-ID', {\n        dateStyle: 'full',\n        timeStyle: 'long',\n        timeZone: 'UTC',\n    });\n\n    return dtFormat.format(new Date(time));\n};\n\nexport default formatTime;","/* eslint no-underscore-dangle: 0 dot-notation: 0 */\n\nimport formatTime from './formatTime';\n\nconst flattenObj = (obj, as) => {\n    const newObj = {};\n\n    Object.keys(obj).forEach((key) => {\n        Object.keys(obj[key]).forEach((keyKey) => {\n\n            const _keyValueTemp = obj[key][keyKey]\n            const _keyTemp = _keyValueTemp['timestamp']\n\n            newObj[_keyTemp] = obj[key][keyKey]\n            newObj[_keyTemp]['Current'] = parseFloat(_keyValueTemp['Current'])\n            newObj[_keyTemp]['Energy'] = parseFloat(_keyValueTemp['Energy'])\n            newObj[_keyTemp]['Frequency'] = parseFloat(_keyValueTemp['Frequency'])\n            newObj[_keyTemp]['Power'] = parseFloat(_keyValueTemp['Power'])\n            newObj[_keyTemp]['Power Factor'] = parseFloat(_keyValueTemp['Power Factor'])\n            newObj[_keyTemp]['Total Price'] = parseFloat(_keyValueTemp['Total Price'])\n            newObj[_keyTemp]['Voltage'] = parseFloat(_keyValueTemp['Voltage'])\n            newObj[_keyTemp]['readable_timestamp'] = formatTime(_keyValueTemp['timestamp'] * 1000)\n\n        })\n    })\n\n    if (as) {\n        if (as.toLowerCase() === 'json') return JSON.stringify(newObj, null, 4);\n        if (as.toLowerCase() === 'array') return Object.values(newObj);\n        return JSON.stringify(newObj, null, 4);\n    }\n\n    return newObj;\n}\n\nexport default flattenObj;","class FetchFirebaseDatabase {\n    constructor(obj) {\n        this.obj = obj;\n    }\n\n    /*\n    Get the key of object, only works if you don't convert firebase database to array\n    */\n    getKeys() {\n        if (Array.isArray(this.obj)) {\n            throw \"Must be Object\"; // eslint-disable-line\n        }\n        return Object.keys(this.obj);\n    }\n\n    /*\n    Only get one value\n    */\n    getValue(key, order) {\n        let sortedObj = this.obj;\n        if (Array.isArray(sortedObj)) {\n            sortedObj = this.sortObj(key, order);\n            return sortedObj.map((a) => a[key]);\n        }\n        return Object.values(sortedObj).map((a) => a[key]);\n    }\n\n    /*\n    Can get multiple value and return as object\n    */\n    getValueObj(keys, orderBy, orderSort) {\n        return this.getValueAll(keys, orderBy, orderSort);\n    }\n\n    /*\n    Can get multiple value and return as array\n    */\n    getValueArr(keys, orderBy, orderSort) {\n        return this.getValueAll(keys, orderBy, orderSort, \"array\");\n    }\n\n    /*\n    Get value function wrapper\n    */\n    getValueAll(keys, orderBy, orderSort, returnAs) {\n        let isStr = 0;\n        if (typeof keys === \"string\" || keys instanceof String) {\n            keys = [keys];\n            isStr = 1;\n        }\n        const data = this.sortObj(orderBy ?? \"timestamp\", orderSort);\n        if (returnAs === \"array\") {\n            const result = data.map((d) => keys.map((k) => d[k]));\n            if (isStr === 1) {\n                return result.flat(1);\n            }\n            return result;\n        }\n        return data.map((d) => {\n            const result = {};\n            keys.map((k) => { // eslint-disable-line\n                result[k] = d[k];\n            });\n            return result;\n        });\n    }\n\n    sortObj(key, order) {\n        const data = this.obj;\n        let xMult = 1;\n        let yMult = -1;\n        if (!Array.isArray(data)) throw \"Must be Array\"; // eslint-disable-line\n        if (order === \"desc\") {\n            xMult = -1;\n            yMult = 1;\n        }\n        return data.sort((a, b) => (a[key] < b[key] ? xMult : yMult));\n    }\n\n    getHighestObjByKey(key) {\n        return this.sortObj(key)[0];\n    }\n\n    getLowestObjByKey(key) {\n        return this.sortObj(key, \"desc\")[0];\n    }\n\n    getHighestValueByKey(key) {\n        return this.getHighestObjByKey(key)[key];\n    }\n\n    getLowestValueByKey(key) {\n        return this.getLowestObjByKey(key)[key];\n    }\n}\n\nexport default FetchFirebaseDatabase;","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Highcharts from \"highcharts/highstock\";\n\nclass Stock extends Component {\n    componentDidMount() {\n        this.createStockChart();\n    }\n\n    componentDidUpdate() {\n        this.createStockChart();\n    }\n\n    createStockChart() {\n        let bgColor, textColor;\n\n        if (this.props.theme === 'dark') {\n            bgColor = \"#121212FF\"\n            textColor = \"#FFFFFFFF\"\n        } else {\n            bgColor = \"#FFFDFDFF\"\n            textColor = \"#000000FF\"\n        }\n\n        let formatData = [];\n        formatData = this.props.data\n            .map((obj) => {\n                const dateInSeconds = new Date(\n                    (parseInt(obj[\"timestamp\"]) + (3600 * 7)) * 1000, // currently use manual to convert UTC to UTC+7\n                ).getTime();\n                return [dateInSeconds, obj[this.props.title]];\n            })\n            .reverse();\n\n        Highcharts.stockChart(\"chart\", {\n\n            chart: {\n                backgroundColor: bgColor,\n            },\n\n            rangeSelector: {\n                selected: 1,\n            },\n\n            title: {\n                text: this.props.title,\n                style: {\n                    color: textColor,\n                }\n            },\n\n            series: [\n                {\n                    name: this.props.title,\n                    data: formatData,\n                    marker: {\n                        enabled: true,\n                        radius: 3,\n                    },\n                    tooltip: {\n                        valueDecimals: 2,\n                    },\n                },\n            ],\n        });\n    }\n\n    render() {\n        return <div id=\"chart\">Highstock</div>;\n    }\n}\n\nStock.propTypes = {\n    data: PropTypes.array,\n    title: PropTypes.string,\n};\n\nexport default Stock;\n","class StatFuncFromObj {\n    static sortObj(data, key, order) {\n        const dataCopy = [...data];\n        let xMult = 1;\n        let yMult = -1;\n        if (order === \"desc\") {\n            xMult = -1;\n            yMult = 1;\n        }\n        return dataCopy.sort((a, b) => (a[key] < b[key] ? xMult : yMult));\n    }\n\n    static convertLocale(str) {\n        const parseTimestamp = new Date(str * 1000);\n        return parseTimestamp.toLocaleString(\"id-ID\");\n    }\n\n    static findMean(data, key) {\n        const dataCopy = [...data];\n        const {length} = dataCopy;\n        return dataCopy.reduce((arr, val) => {\n            return arr + val[key] / length;\n        }, 0);\n    }\n\n    static getArrFromObj(data, key) {\n        return StatFuncFromObj.sortObj(data, key).map((a) => a[key]);\n    }\n\n    static findQuantile(data, key, q) {\n        const arrData = StatFuncFromObj.getArrFromObj(data, key);\n        const pos = (arrData.length - 1) * q;\n        const base = Math.floor(pos);\n        const rest = pos - base;\n        if (arrData[base + 1] !== undefined) {\n            return arrData[base] + rest * (arrData[base + 1] - arrData[base]);\n        } else {\n            return arrData[base];\n        }\n    }\n\n    static findMedian(data, key) {\n        return StatFuncFromObj.findQuantile(data, key, 0.5)\n    }\n\n    static findStd(data, key) {\n        const mu = StatFuncFromObj.findMean(data, key)\n        const arrData = StatFuncFromObj.getArrFromObj(data, key);\n        const diffArr = arrData.map(a => (a - mu) ** 2);\n        return Math.sqrt((diffArr.reduce((a, b) => a + b, 0)) / (arrData.length - 1));\n    };\n}\n\nexport default StatFuncFromObj;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport StatFuncFromObj from \"../../Helper/Utils/statFuncFromObj\";\n\nclass Stats extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.title,\n            data: props.data,\n            units: props.units,\n            highest: StatFuncFromObj.sortObj(props.data, props.title)[0][props.title],\n            lowest: StatFuncFromObj.sortObj(props.data, props.title, \"desc\")[0][\n                props.title\n                ],\n            timeHighest: StatFuncFromObj.convertLocale(\n                StatFuncFromObj.sortObj(props.data, props.title)[0][\"timestamp\"],\n            ),\n            timeLowest: StatFuncFromObj.convertLocale(\n                StatFuncFromObj.sortObj(props.data, props.title, \"desc\")[0][\"timestamp\"],\n            ),\n            mean: StatFuncFromObj.findMean(props.data, props.title),\n            median: StatFuncFromObj.findMedian(props.data, props.title),\n            std: StatFuncFromObj.findStd(props.data, props.title),\n            latestData: StatFuncFromObj.sortObj(props.data, \"timestamp\")[0][props.title],\n            latestTime: StatFuncFromObj.convertLocale(\n                StatFuncFromObj.sortObj(props.data, \"timestamp\")[0][\"timestamp\"],\n            ),\n            firstData: StatFuncFromObj.sortObj(props.data, \"timestamp\", \"desc\")[0][\n                props.title\n                ],\n            firstTime: StatFuncFromObj.convertLocale(\n                StatFuncFromObj.sortObj(props.data, \"timestamp\", \"desc\")[0][\"timestamp\"],\n            ),\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (\n            prevProps.title !== this.props.title &&\n            prevProps.data !== this.props.data\n        ) {\n            this.setState({\n                title: this.props.title,\n                data: this.props.data,\n                units: this.props.units,\n                highest: StatFuncFromObj.sortObj(this.props.data, this.props.title)[0][\n                    this.props.title\n                    ],\n                lowest: StatFuncFromObj.sortObj(\n                    this.props.data,\n                    this.props.title,\n                    \"desc\",\n                )[0][this.props.title],\n                timeHighest: StatFuncFromObj.convertLocale(\n                    StatFuncFromObj.sortObj(this.props.data, this.props.title)[0][\n                        \"timestamp\"\n                        ],\n                ),\n                timeLowest: StatFuncFromObj.convertLocale(\n                    StatFuncFromObj.sortObj(this.props.data, this.props.title, \"desc\")[0][\n                        \"timestamp\"\n                        ],\n                ),\n                mean: StatFuncFromObj.findMean(this.props.data, this.props.title),\n                median: StatFuncFromObj.findMedian(this.props.data, this.props.title),\n                std: StatFuncFromObj.findStd(this.props.data, this.props.title),\n                latestData: StatFuncFromObj.sortObj(this.props.data, \"timestamp\")[0][\n                    this.props.title\n                    ],\n                latestTime: StatFuncFromObj.convertLocale(\n                    StatFuncFromObj.sortObj(this.props.data, \"timestamp\")[0][\"timestamp\"],\n                ),\n                firstData: StatFuncFromObj.sortObj(\n                    this.props.data,\n                    \"timestamp\",\n                    \"desc\",\n                )[0][this.props.title],\n                firstTime: StatFuncFromObj.convertLocale(\n                    StatFuncFromObj.sortObj(this.props.data, \"timestamp\", \"desc\")[0][\n                        \"timestamp\"\n                        ],\n                ),\n            });\n        }\n    }\n\n    renderOther() {\n        return (\n            <div>\n                <h6>\n                    Mean {this.state.title}: {this.state.mean}{\" \"}\n                    {this.state.units}\n                </h6>\n                <h6>\n                    Median {this.state.title}: {this.state.median}{\" \"}\n                    {this.state.units}\n                </h6>\n                <h6>\n                    Standard Deviation {this.state.title}: {this.state.std}{\" \"}\n                    {this.state.units}\n                </h6>\n                <br/>\n                <h6>\n                    Highest {this.state.title}: {this.state.highest}{\" \"}\n                    {this.state.units} ({this.state.timeHighest})\n                </h6>\n                <h6>\n                    Lowest {this.state.title}: {this.state.lowest}{\" \"}\n                    {this.state.units} ({this.state.timeLowest})\n                </h6>\n                <br/>\n                <h6>\n                    Latest Data of {this.state.title}: {this.state.latestData}{\" \"}\n                    {this.state.units} ({this.state.latestTime})\n                </h6>\n                <h6>\n                    First Data of {this.state.title}: {this.state.firstData}{\" \"}\n                    {this.state.units} ({this.state.firstTime})\n                </h6>\n            </div>\n        );\n    }\n\n    renderCurrency() {\n        return (\n            <div>\n                <h6>\n                    Mean {this.state.title}: {this.state.units}\n                    {this.state.mean}\n                </h6>\n                <h6>\n                    Median {this.state.title}: {this.state.units}\n                    {this.state.median}\n                </h6>\n                <h6>\n                    Standard Deviation {this.state.title}: {this.state.units}\n                    {this.state.std}\n                </h6>\n                <br/>\n                <h6>\n                    Highest {this.state.title}: {this.state.units}\n                    {this.state.highest} ({this.state.timeHighest})\n                </h6>\n                <h6>\n                    Lowest {this.state.title}: {this.state.units}\n                    {this.state.lowest} ({this.state.timeLowest})\n                </h6>\n                <br/>\n                <h6>\n                    Latest Data of {this.state.title}: {this.state.units}\n                    {this.state.latestData} ({this.state.latestTime})\n                </h6>\n                <h6>\n                    First Data of {this.state.title}: {this.state.units}\n                    {this.state.firstData} ({this.state.firstTime})\n                </h6>\n            </div>\n        );\n    }\n\n    render() {\n        let conditionalUnits;\n        if (this.state.title === 'Total Price') {\n            conditionalUnits = this.renderCurrency();\n        } else {\n            conditionalUnits = this.renderOther();\n        }\n        return (\n            <div>\n                {conditionalUnits}\n            </div>\n        );\n    }\n}\n\nStats.propTypes = {\n    title: PropTypes.string,\n    data: PropTypes.array,\n    units: PropTypes.string\n}\n\nexport default Stats;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Table} from \"react-bootstrap\";\n\nclass TabelChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.title,\n            data: props.data,\n            units: props.units\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (\n            prevProps.title !== this.props.title &&\n            prevProps.data !== this.props.data\n        ) {\n            this.setState({\n                title: this.props.title,\n                data: this.props.data,\n                units: this.props.units\n            });\n        }\n    }\n\n    convertLocale(str) {\n        const parseTimestamp = new Date(str * 1000);\n        return parseTimestamp.toLocaleString(\"id-ID\");\n    }\n\n    render() {\n        let tableColorStyle;\n        if (this.props.theme === 'dark') {\n            tableColorStyle = \"text-light bg-dark\"\n        } else {\n            tableColorStyle = \"text-dark bg-light\"\n        }\n\n        return (\n            <Table className=\"table-light\">\n                <thead>\n                <tr>\n                    <th className={tableColorStyle}>{this.state.title} (in {this.state.units})</th>\n                    <th className={tableColorStyle}>Timestamp (s)</th>\n                    <th className={tableColorStyle}>Readable Timestamp (GMT+7)</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.data.map((item, index) => (\n                    <tr key={index}>\n                        <td className={tableColorStyle}>\n                            {this.state.title === 'Total Price' ? `${this.state.units} ` : ''}\n                            {item[this.state.title]}\n                            {this.state.title !== 'Total Price' ? ` ${this.state.units}` : ''}\n                        </td>\n                        <td className={tableColorStyle}>{item[\"timestamp\"]}</td>\n                        <td className={tableColorStyle}>{this.convertLocale(item[\"timestamp\"])}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nTabelChart.propTypes = {\n    title: PropTypes.string,\n    data: PropTypes.array,\n    units: PropTypes.string\n};\n\nexport default TabelChart;\n","class StatFuncFromArr {\n    static sortObj(data, order) {\n        const dataCopy = [...data];\n        let xMult = 1;\n        let yMult = -1;\n        if (order === \"desc\") {\n            xMult = -1;\n            yMult = 1;\n        }\n        return dataCopy.sort((a, b) => (a < b ? xMult : yMult));\n    }\n\n    static findMean(data) {\n        const dataCopy = [...data];\n        const {length} = dataCopy;\n        return dataCopy.reduce((arr, val) => {\n            return arr + val / length;\n        }, 0);\n    }\n\n    static findSum(data) {\n        const dataCopy = [...data];\n        return dataCopy.reduce((arr, val) => {\n            return arr + val;\n        }, 0);\n    }\n\n    static findQuantile(data, q) {\n        const pos = (data.length - 1) * q;\n        const base = Math.floor(pos);\n        const rest = pos - base;\n        if (data[base + 1] !== undefined) {\n            return data[base] + rest * (data[base + 1] - data[base]);\n        } else {\n            return data[base];\n        }\n    }\n\n    static findMedian(data) {\n        return StatFuncFromArr.findQuantile(data, 0.5)\n    }\n\n    static findStd(data) {\n        const mu = StatFuncFromArr.findMean(data)\n        const diffArr = data.map(a => (a - mu) ** 2);\n        return Math.sqrt((StatFuncFromArr.findSum(diffArr)) / (data.length - 1));\n    };\n}\n\nexport default StatFuncFromArr;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from \"highcharts/highcharts\";\nimport HighchartsMore from \"highcharts/highcharts-more.src\";\nimport HighchartsGauge from \"highcharts/modules/solid-gauge\";\nimport StatFuncFromArr from \"../../Helper/Utils/statFuncFromArr\";\n\nHighchartsMore(Highcharts);\nHighchartsGauge(Highcharts);\n\nclass Gauge extends Component {\n    componentDidUpdate() {\n        this.createGaugeChart();\n    }\n\n    componentDidMount() {\n        this.createGaugeChart();\n    }\n\n    createGaugeChart() {\n        const arrFromObj = this.props.data.map((obj) => obj[this.props.title]);\n\n        let bgColor, textColor;\n\n        if (this.props.theme === 'dark') {\n            bgColor = \"#121212FF\"\n            textColor = \"#FFFFFFFF\"\n        } else {\n            bgColor = \"#FFFDFDFF\"\n            textColor = \"#000000FF\"\n        }\n\n        Highcharts.chart(\"gaugeChart\", {\n            rangeSelector: {\n                selected: 1,\n            },\n\n            chart: {\n                type: \"gauge\",\n                backgroundColor: bgColor,\n            },\n\n            title: {\n                text: this.props.title,\n                style: {\n                    color: textColor,\n                }\n            },\n\n            pane: {\n                startAngle: -90,\n                endAngle: 90,\n                background: null,\n                center: ['50%', '75%'],\n                size: '100%'\n            },\n\n            yAxis: {\n                min: Math.min(...arrFromObj),\n                max: Math.max(...arrFromObj),\n                tickPixelInterval: 72,\n                tickPosition: \"inside\",\n                tickColor: bgColor,\n                tickLength: 20,\n                tickWidth: 2,\n                minorTickInterval: null,\n                labels: {\n                    distance: 20,\n                    style: {\n                        fontSize: \"14px\",\n                        color: textColor,\n                    },\n                },\n                plotBands: [\n                    {\n                        from: Math.min(...arrFromObj),\n                        to: StatFuncFromArr.findQuantile(arrFromObj, .25),\n                        color: \"#55BF3B\", // green\n                        thickness: 20,\n                    },\n                    {\n                        from: StatFuncFromArr.findQuantile(arrFromObj, .25),\n                        to: StatFuncFromArr.findQuantile(arrFromObj, .75),\n                        color: \"#DDDF0D\", // yellow\n                        thickness: 20,\n                    },\n                    {\n                        from: StatFuncFromArr.findQuantile(arrFromObj, .75),\n                        to: Math.max(...arrFromObj),\n                        color: \"#DF5353\", // red\n                        thickness: 20,\n                    },\n                ],\n            },\n\n            series: [\n                {\n                    name: this.props.title,\n                    data: [StatFuncFromArr.findMean(arrFromObj)],\n                    tooltip: {\n                        valueSuffix: \" \" + this.props.units,\n                    },\n                    dataLabels: {\n                        format: this.props.title === 'Total Price' ? this.props.units + \"{y} \" : \"{y} \" + this.props.units,\n                        borderWidth: 0,\n                        color: textColor,\n                        style: {\n                            fontSize: \"16px\",\n                        },\n                    },\n                    dial: {\n                        radius: \"80%\",\n                        backgroundColor: \"gray\",\n                        baseWidth: 12,\n                        baseLength: \"0%\",\n                        rearLength: \"0%\",\n                    },\n                    pivot: {\n                        backgroundColor: \"gray\",\n                        radius: 6,\n                    },\n                },\n            ]\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <div id=\"gaugeChart\"/>\n            </div>\n        );\n    }\n}\n\nGauge.propTypes = {\n    title: PropTypes.string,\n    data: PropTypes.array,\n    units: PropTypes.string\n};\n\nexport default Gauge;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Container} from \"react-bootstrap\";\n\nclass WelcomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.title,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (\n            prevProps.title !== this.props.title\n        ) {\n            this.setState({\n                title: this.props.title\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <h1>Welcome!</h1>\n            </Container>\n        );\n    }\n}\n\nWelcomePage.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default WelcomePage;\n","import React, {Component} from \"react\";\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date().toLocaleString(),\n        };\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        this.setState({\n            time: new Date().toLocaleString(),\n        });\n    }\n\n    render() {\n        return (\n            <span className=\"App-clock\">\n                Current datetime: {this.state.time}\n            </span>\n        )\n    }\n}\n\nexport default Clock;\n","import React, {Component} from 'react';\nimport './Style/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as _ from 'lodash';\nimport {child, get} from 'firebase/database';\nimport dbRef from './Helper/Config/firebaseConfig';\nimport flattenObj from './Helper/Utils/flattenObj';\nimport FetchFirebaseDatabase from './Helper/Utils/fetchFirebaseDatabase';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Stock from './Components/Chart/Stock';\nimport Stats from \"./Components/Chart/Stats\";\nimport TabelChart from './Components/Chart/Table';\nimport Gauge from './Components/Chart/Gauge';\nimport WelcomePage from './Page/WelcomePage';\nimport Clock from \"./Components/Other/Clock\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: 0,\n            data: _.cloneDeep([]),\n            title: 'init',\n            theme: localStorage.getItem('theme'),\n        };\n\n        this.zeroSelected = this.zeroSelected.bind(this);\n        this.currentSelected = this.keySelected.bind(this, 1, 'Current', 'A');\n        this.energySelected = this.keySelected.bind(this, 2, 'Energy', 'J');\n        this.frequencySelected = this.keySelected.bind(this, 3, 'Frequency', 'Hz');\n        this.powerFactorSelected = this.keySelected.bind(this, 4, 'Power Factor', 'W');\n        this.powerSelected = this.keySelected.bind(this, 5, 'Power', 'W');\n        this.priceSelected = this.keySelected.bind(this, 6, 'Total Price', 'Rp. ');\n        this.voltageSelected = this.keySelected.bind(this, 7, 'Voltage', 'V');\n\n    }\n\n    async keySelected(selected, title, units) {\n        const snapshot = await get(child(dbRef, `UsersData/${process.env.REACT_APP_UID}`));\n        if (snapshot.exists()) {\n            const snapshotFlatten = flattenObj(snapshot.val(), 'array');\n            const snapshotHandlerClass = new FetchFirebaseDatabase(snapshotFlatten);\n            const data = snapshotHandlerClass.getValueAll([title, 'timestamp'], null, null, 'object');\n            this.setState({\n                selected: selected,\n                data: _.cloneDeep(data),\n                title: title,\n                units: units,\n            });\n        }\n    }\n\n    zeroSelected() {\n        this.setState({\n            selected: 0,\n            data: null,\n            title: null,\n        })\n    }\n\n    DarkMode() {\n        const setDark = () => {\n            localStorage.setItem(\"theme\", \"dark\");\n            document.documentElement.setAttribute(\"data-theme\", \"dark\");\n        };\n        const setLight = () => {\n            localStorage.setItem(\"theme\", \"light\");\n            document.documentElement.setAttribute(\"data-theme\", \"light\");\n        };\n\n        const storedTheme = localStorage.getItem(\"theme\");\n        const prefersDark = window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        const defaultDark = storedTheme === \"dark\" || (storedTheme === null && prefersDark);\n\n        if (defaultDark) {\n            setDark();\n        }\n\n        const toggleTheme = (e) => {\n            if (e.target.checked) {\n                setDark();\n                this.setState({\n                    theme: \"dark\",\n                });\n            } else {\n                setLight();\n                this.setState({\n                    theme: \"light\",\n                });\n            }\n        };\n\n        return (\n            <div className=\"toggle-theme-wrapper\">\n                <span role=\"img\" aria-label=\"light\">☀️</span>\n                <label className=\"toggle-theme\" htmlFor=\"checkbox\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"checkbox\"\n                        onChange={toggleTheme}\n                        defaultChecked={defaultDark}\n                    />\n                    <div className=\"slider round\"></div>\n                </label>\n                <span role=\"img\" aria-label=\"dark\">🌒</span>\n            </div>\n        );\n    };\n\n    Header(color) {\n        return (\n            <Container>\n                <div className=\"col-lg-6\">\n                    <div className=\"input-group\">\n                        <span className=\"input-group-btn\">\n                            {this.DarkMode()}\n                        </span>\n                        <span className=\"input-group-btn\" style={{position: \"relative\", top: \"2.5px\", left: \"120%\"}}>\n                            <a href=\"https://github.com/emnopal/electrical-monitoring-dashboard-react\" target=\"_blank\"\n                               rel=\"noopener noreferrer\">\n                                <button className=\"btn btn-default\" type=\"button\" style={{color: color}}>Repository</button>\n                            </a>\n                            <a href=\"https://github.com/emnopal\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <button className=\"btn btn-default\" type=\"button\" style={{color: color}}>Follow my Github</button>\n                            </a>\n                        </span>\n                    </div>\n                </div>\n                <br/>\n                <br/>\n                <h1>Electrical Monitoring Dashboard</h1>\n                Note: Time in UTC+7 (Asia/Jakarta) (<Clock/>)\n            </Container>\n        )\n    }\n\n    zeroHandlerSelected() {\n        return (\n            <Container>\n                <WelcomePage title={this.state.title}/>\n            </Container>\n        );\n    }\n\n    otherHandlerSelected() {\n        return (\n            <Container>\n                <div className='statHeaders'>\n                    <Stats data={this.state.data} title={this.state.title} units={this.state.units} theme={this.state.theme}/>\n                    <Gauge data={this.state.data} title={this.state.title} units={this.state.units} theme={this.state.theme}/>\n                </div>\n                <div>\n                    <br/>\n                    <Stock data={this.state.data} title={this.state.title} theme={this.state.theme}/>\n                    <br/>\n                    <TabelChart data={this.state.data} title={this.state.title} units={this.state.units} theme={this.state.theme}/>\n                </div>\n            </Container>\n        );\n    }\n\n    buttonHandler() {\n        return (\n            <Nav className=\"justify-content-center\">\n                <Button type='button' className={\"btn btn-highchart \" + (this.state.selected === 0 ? 'active' : '')}\n                        onClick={this.zeroSelected}>Home</Button>\n                <Button type='button' className={\"btn btn-highchart \" + (this.state.selected === 1 ? 'active' : '')}\n                        onClick={this.currentSelected}>Current</Button>\n                <Button type='button' className={\"btn btn-highchart \" + (this.state.selected === 2 ? 'active' : '')}\n                        onClick={this.energySelected}>Energy</Button>\n                <Button type='button' className={\"btn btn-highchart \" + (this.state.selected === 3 ? 'active' : '')}\n                        onClick={this.frequencySelected}>Frequency</Button>\n                <Button type='button' className={\"btn btn-highchart \" + (this.state.selected === 4 ? 'active' : '')}\n                        onClick={this.powerFactorSelected}>Power Factor</Button>\n                <Button type='button' className={\"btn btn-highchart \" + (this.state.selected === 5 ? 'active' : '')}\n                        onClick={this.powerSelected}>Power</Button>\n                <Button type='button' className={\"btn btn-highchart \" + (this.state.selected === 6 ? 'active' : '')}\n                        onClick={this.priceSelected}>Total Price</Button>\n                <Button type='button' className={\"btn btn-highchart \" + (this.state.selected === 7 ? 'active' : '')}\n                        onClick={this.voltageSelected}>Voltage</Button>\n            </Nav>\n        )\n    }\n\n    render() {\n        let conditionalContainer;\n\n        if (this.state.selected === 0) {\n            conditionalContainer = this.zeroHandlerSelected();\n        } else {\n            conditionalContainer = this.otherHandlerSelected();\n        }\n\n        let color;\n\n        if(this.state.theme === 'light') {\n            color = 'black';\n        } else {\n            color = 'white';\n        }\n\n        const button = this.buttonHandler();\n        return (\n            <div className=\"App\">\n                <Container>\n                    <br/>\n                    {this.Header(color)}\n                    {button}\n                    <br/>\n                    {conditionalContainer}\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\nimport './Style/DarkMode.css';\nimport './Style/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            navigator.serviceWorker\n                .register(swUrl)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.');\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.');\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error);\n                });\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}